/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-04-19 01:11:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.map;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class monitor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        body, html{width: 100%;height: 100%;overflow: hidden;margin:0;}\r\n");
      out.write("        #allmap {margin-right: 300px;height: 100%;overflow: hidden;}\r\n");
      out.write("        #result {border-left:1px dotted #999;height:100%;width:295px;position:absolute;top:0px;right:0px;font-size:12px;}\r\n");
      out.write("        dl,dt,dd,ul,li{\r\n");
      out.write("            margin:0;\r\n");
      out.write("            padding:0;\r\n");
      out.write("            list-style:none;\r\n");
      out.write("        }\r\n");
      out.write("        p{font-size:12px;}\r\n");
      out.write("        dt{\r\n");
      out.write("            font-size:14px;\r\n");
      out.write("            font-family:\"微软雅黑\";\r\n");
      out.write("            font-weight:bold;\r\n");
      out.write("            border-bottom:1px dotted #000;\r\n");
      out.write("            padding:5px 0 5px 5px;\r\n");
      out.write("            margin:5px 0;\r\n");
      out.write("        }\r\n");
      out.write("        dd{\r\n");
      out.write("            padding:5px 0 0 5px;\r\n");
      out.write("        }\r\n");
      out.write("        li{\r\n");
      out.write("            line-height:28px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/jQuery/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=F0i6SrLmHquLVNLCqpExxPrj8mWVdFwx\"></script>\r\n");
      out.write("    <!--加载鼠标绘制工具-->\r\n");
      out.write("    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css\" />\r\n");
      out.write("    <!--加载检索信息窗口-->\r\n");
      out.write("    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/SearchInfoWindow/1.4/src/SearchInfoWindow_min.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"http://api.map.baidu.com/library/SearchInfoWindow/1.4/src/SearchInfoWindow_min.css\" />\r\n");
      out.write("    <!--加载路书-->\r\n");
      out.write("    <!--<script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/LuShu/1.2/src/LuShu_min.js\"></script>-->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/baidu/js/lushu.js\"></script>\r\n");
      out.write("    <title>鼠标绘制工具</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"allmap\" style=\"overflow:hidden;zoom:1;position:relative;\">\r\n");
      out.write("    <div id=\"map\" style=\"height:100%;-webkit-transition: all 0.5s ease-in-out;transition: all 0.5s ease-in-out;\"></div>\r\n");
      out.write("    <div id=\"showPanelBtn\" style=\"position:absolute;font-size:14px;top:50%;margin-top:-95px;right:0px;width:20px;padding:10px 10px;color:#999;cursor:pointer;text-align:center;height:170px;background:rgba(255,255,255,0.9);-webkit-transition: all 0.5s ease-in-out;transition: all 0.5s ease-in-out;font-family:'微软雅黑';font-weight:bold;\">显示检索结果面板<br/><</div>\r\n");
      out.write("    <div id=\"panelWrap\" style=\"width:0px;position:absolute;top:0px;right:0px;height:100%;overflow:auto;-webkit-transition: all 0.5s ease-in-out;transition: all 0.5s ease-in-out;\">\r\n");
      out.write("        <div style=\"width:20px;height:200px;margin:-100px 0 0 -10px;color:#999;position:absolute;opacity:0.5;top:50%;left:50%;\" id=\"showOverlayInfo\">此处用于展示覆盖物信息</div>\r\n");
      out.write("        <div id=\"panel\" style=\"position:absolute;\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"result\">\r\n");
      out.write("    <dl>\r\n");
      out.write("        <dt>绘制工具功能</dt>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <label><input type=\"radio\" name=\"openClose1\" onclick=\"drawingManager.open()\"/>打开</label>\r\n");
      out.write("                <label><input type=\"radio\" name=\"openClose1\" onclick=\"drawingManager.close()\" checked=\"checked\"/>关闭</label>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <dt>是否进行线或面积的计算(单位米)</dt>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <label><input type=\"radio\" name=\"openClose\" onclick=\"drawingManager.enableCalculate()\"/>打开</label>\r\n");
      out.write("                <label><input type=\"radio\" name=\"openClose\" onclick=\"drawingManager.disableCalculate()\" checked=\"checked\"/>关闭</label>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <dt>绘制功能</dt>\r\n");
      out.write("        <dd>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <label><input type=\"radio\" name=\"drawmode\" onclick=\"drawingManager.setDrawingMode(BMAP_DRAWING_MARKER)\" checked=\"checked\"/>画点</label>\r\n");
      out.write("                    <input type=\"checkbox\" id=\"isInfowindow\"/> 是否带信息窗口\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <label><input type=\"radio\" name=\"drawmode\" onclick=\"drawingManager.setDrawingMode(BMAP_DRAWING_CIRCLE)\"/>画圆</label>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <label><input type=\"radio\" name=\"drawmode\" onclick=\"drawingManager.setDrawingMode(BMAP_DRAWING_POLYLINE)\"/>画线</label>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <label><input type=\"radio\" name=\"drawmode\" onclick=\"drawingManager.setDrawingMode(BMAP_DRAWING_POLYGON)\"/>画多边形</label>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <label><input type=\"radio\" name=\"drawmode\" onclick=\"drawingManager.setDrawingMode(BMAP_DRAWING_RECTANGLE)\"/>画矩形</label>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </dd>\r\n");
      out.write("        <dt>覆盖物操作</dt>\r\n");
      out.write("        <dd>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <input type=\"button\" value=\"获取绘制的覆盖物个数\" onclick=\"alert(overlays.length)\"/>\r\n");
      out.write("                    <input type=\"button\" value=\"清除所有覆盖物\" onclick=\"clearAll()\"/>\r\n");
      out.write("                    <input type=\"button\" value=\"获取最后一个覆盖物信息\" id=\"getLastOverLay\"/>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </dd>\r\n");
      out.write("    </dl>\r\n");
      out.write("    <dt>中心点平移</dt>\r\n");
      out.write("    <dd>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <input style=\"width: 200px;height: 30px\" type=\"text\" id=\"Lng1\" placeholder=\"经度\">\r\n");
      out.write("                <br>\r\n");
      out.write("                <input style=\"width: 200px;height: 30px\" type=\"text\" id=\"Lat1\" placeholder=\"纬度\">\r\n");
      out.write("                <br>\r\n");
      out.write("                <button style=\"width: 60px;height: 30px\" onclick=\"move()\">移动</button>\r\n");
      out.write("                <button style=\"width: 60px;height: 30px\" onclick=\"real()\">恢复</button>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </dd>\r\n");
      out.write("    <dt>路书</dt>\r\n");
      out.write("    <dd>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <button id=\"run\">开始</button>\r\n");
      out.write("                <button id=\"stop\">停止</button>\r\n");
      out.write("                <button id=\"pause\">暂停</button>\r\n");
      out.write("                <br>\r\n");
      out.write("                <button id=\"hide\">隐藏信息窗口</button>\r\n");
      out.write("                <button id=\"show\">展示信息窗口</button>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </dd>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    //用经纬度设置地图中心点\r\n");
      out.write("    function move() {\r\n");
      out.write("        if (document.getElementById(\"Lng1\").value != \"\" && document.getElementById(\"Lat1\").value != \"\") {\r\n");
      out.write("            var new_point = new BMap.Point(document.getElementById(\"Lng1\").value, document.getElementById(\"Lat1\").value);\r\n");
      out.write("            map.panTo(new_point)\r\n");
      out.write("        } else {\r\n");
      out.write("            alert(\"请输入坐标\")\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    function real(){\r\n");
      out.write("        map.panTo(poi,16)\r\n");
      out.write("    }\r\n");
      out.write("    // 百度地图API功能\r\n");
      out.write("    var map = new BMap.Map('map'); //创建地图\r\n");
      out.write("    var poi = new BMap.Point(120.256877, 31.548735); //创建中心坐标点\r\n");
      out.write("    map.centerAndZoom(poi, 10);     // 初始化地图，设置中心点坐标和地图级别\r\n");
      out.write("    map.enableScrollWheelZoom();    //启用滚轮缩小放大\r\n");
      out.write("\r\n");
      out.write("    //点击获取覆盖物信息\r\n");
      out.write("    $(\"getLastOverLay\").onclick = function(){\r\n");
      out.write("        if(overlays.length){\r\n");
      out.write("            alert(overlays[overlays.length - 1]);\r\n");
      out.write("        }else{\r\n");
      out.write("            alert(\"没有覆盖物\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //信息窗口的内容定义\r\n");
      out.write("    var content = '<div style=\"margin:0;line-height:20px;padding:2px;\">' +\r\n");
      out.write("            '地址：滨湖区建筑西路599号<br/>电话：(0510)8888888<br/>简介：无锡国家工业设计园。' +\r\n");
      out.write("            '</div>';\r\n");
      out.write("\r\n");
      out.write("    //画点创建带信息窗口的poi点\r\n");
      out.write("    var searchInfoWindow = new BMapLib.SearchInfoWindow(map, content, {\r\n");
      out.write("        title  : \"现代科技大厦\",      //标题\r\n");
      out.write("        width  : 290,             //宽度\r\n");
      out.write("        height : 105,              //高度\r\n");
      out.write("        panel  : \"panel\",         //检索结果面板\r\n");
      out.write("        enableAutoPan : true,     //自动平移\r\n");
      out.write("        searchTypes   :[\r\n");
      out.write("            BMAPLIB_TAB_SEARCH,   //周边检索\r\n");
      out.write("            BMAPLIB_TAB_TO_HERE,  //到这里去\r\n");
      out.write("            BMAPLIB_TAB_FROM_HERE //从这里出发\r\n");
      out.write("        ]\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    var overlays = [];\r\n");
      out.write("    //回调获得覆盖物信息\r\n");
      out.write("    var allPoints=[]\r\n");
      out.write("    var points =[];\r\n");
      out.write("    var overlaycomplete = function(e){\r\n");
      out.write("        overlays.push(e.overlay);\r\n");
      out.write("        var result = \"\";\r\n");
      out.write("        result = \"<p>\";\r\n");
      out.write("        result += e.drawingMode + \":\";\r\n");
      out.write("        if (e.drawingMode == BMAP_DRAWING_MARKER) {\r\n");
      out.write("            result += ' 坐标：' + e.overlay.getPosition().lng + ',' + e.overlay.getPosition().lat;\r\n");
      out.write("            if ($('isInfowindow').checked) {\r\n");
      out.write("                searchInfoWindow.open(e.overlay);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        if (e.drawingMode == BMAP_DRAWING_CIRCLE) {\r\n");
      out.write("            result += ' 半径：' + e.overlay.getRadius();\r\n");
      out.write("            result += ' 中心点：' + e.overlay.getCenter().lng + \",\" + e.overlay.getCenter().lat;\r\n");
      out.write("        }\r\n");
      out.write("        if (e.drawingMode == BMAP_DRAWING_POLYLINE || e.drawingMode == BMAP_DRAWING_POLYGON || e.drawingMode == BMAP_DRAWING_RECTANGLE) {\r\n");
      out.write("            result += ' 所画的点个数：' + e.overlay.getPath().length ;\r\n");
      out.write("            var path = e.overlay.getPath();//Array<Point> 返回多边型的点数组\r\n");
      out.write("\r\n");
      out.write("            for(var i=0;i<path.length;i++){\r\n");
      out.write("              if(e.drawingMode == BMAP_DRAWING_POLYLINE) {\r\n");
      out.write("\r\n");
      out.write("                  points = new BMap.Point(path[i].lng,path[i].lat)\r\n");
      out.write("//                  points = \"[\" +path[i].lng +\",\"+path[i].lat+\"]\"\r\n");
      out.write("//                  points.push(path[i].lng+\",\"+path[i].lat )\r\n");
      out.write("                  allPoints.push(points)\r\n");
      out.write("//                  console.log(points)\r\n");
      out.write("//\r\n");
      out.write("              } else {\r\n");
      out.write("                  console.log(\"不是正确路线\")\r\n");
      out.write("              }\r\n");
      out.write("                //console.log(\"lng:\"+path[i].lng + \" lat:\" + path[i].lat);\r\n");
      out.write("                result += \"\\n lng:\" +path[i].lng  + \" lat:\" + path[i].lat\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        result += \"</p>\";\r\n");
      out.write("        $(\"showOverlayInfo\").style.display = \"none\";\r\n");
      out.write("        $(\"panel\").innerHTML += result; //将绘制的覆盖物信息结果输出到结果面板\r\n");
      out.write("    };\r\n");
      out.write("        //画图的样式\r\n");
      out.write("    var styleOptions = {\r\n");
      out.write("        strokeColor:\"red\",    //边线颜色。\r\n");
      out.write("        fillColor:\"red\",      //填充颜色。当参数为空时，圆形将没有填充效果。\r\n");
      out.write("        strokeWeight: 3,       //边线的宽度，以像素为单位。\r\n");
      out.write("        strokeOpacity: 0.8,\t   //边线透明度，取值范围0 - 1。\r\n");
      out.write("        fillOpacity: 0.6,      //填充的透明度，取值范围0 - 1。\r\n");
      out.write("        strokeStyle: 'solid' //边线的样式，solid或dashed。\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //实例化鼠标绘制工具\r\n");
      out.write("    var drawingManager = new BMapLib.DrawingManager(map, {\r\n");
      out.write("        isOpen: false, //是否开启绘制模式\r\n");
      out.write("        enableDrawingTool: true, //是否显示工具栏\r\n");
      out.write("        drawingToolOptions: {\r\n");
      out.write("            anchor: BMAP_ANCHOR_TOP_RIGHT, //位置\r\n");
      out.write("            offset: new BMap.Size(5, 5), //偏离值\r\n");
      out.write("            scale: 0.8 //工具栏缩放比例\r\n");
      out.write("        },\r\n");
      out.write("        circleOptions: styleOptions, //圆的样式\r\n");
      out.write("        polylineOptions: styleOptions, //线的样式\r\n");
      out.write("        polygonOptions: styleOptions, //多边形的样式\r\n");
      out.write("        rectangleOptions: styleOptions //矩形的样式\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //添加鼠标绘制工具监听事件，用于获取绘制结果\r\n");
      out.write("    drawingManager.addEventListener('overlaycomplete', overlaycomplete);\r\n");
      out.write("\r\n");
      out.write("    function $(id){\r\n");
      out.write("        return document.getElementById(id);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //清空所有图形\r\n");
      out.write("    function clearAll() {\r\n");
      out.write("        for(var i = 0; i < overlays.length; i++){\r\n");
      out.write("            map.removeOverlay(overlays[i]);\r\n");
      out.write("        }\r\n");
      out.write("        overlays.length = 0\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    var isPanelShow = false;\r\n");
      out.write("    //显示结果面板动作\r\n");
      out.write("    $(\"showPanelBtn\").onclick = showPanel;\r\n");
      out.write("    function showPanel(){\r\n");
      out.write("        if (isPanelShow == false) {\r\n");
      out.write("            isPanelShow = true;\r\n");
      out.write("            $(\"showPanelBtn\").style.right = \"230px\";\r\n");
      out.write("            $(\"panelWrap\").style.width = \"230px\";\r\n");
      out.write("            $(\"map\").style.marginRight = \"230px\";\r\n");
      out.write("            $(\"showPanelBtn\").innerHTML = \"隐藏绘制结果信息<br/>>\";\r\n");
      out.write("        } else {\r\n");
      out.write("            isPanelShow = false;\r\n");
      out.write("            $(\"showPanelBtn\").style.right = \"0px\";\r\n");
      out.write("            $(\"panelWrap\").style.width = \"0px\";\r\n");
      out.write("            $(\"map\").style.marginRight = \"0px\";\r\n");
      out.write("            $(\"showPanelBtn\").innerHTML = \"显示绘制结果信息<br/><\";\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    $(\"run\").onclick = function(){\r\n");
      out.write("         lushu = new BMapLib.LuShu(map,allPoints,{\r\n");
      out.write("        defaultContent:\"\",\r\n");
      out.write("        autoView:true,  //是否开启视野自动调整\r\n");
      out.write("        icon:new BMap.Icon(\"");
      out.print(request.getContextPath());
      out.write("/baidu/image/car.png\",new  BMap.Size(52,26),{anchor:new BMap.Size(27,13)}),\r\n");
      out.write("        enableRotation:true,    //是否设置marker随着道路走向进行旋转\r\n");
      out.write("        speed:16000,\r\n");
      out.write("        landmarkPois:[]\r\n");
      out.write("    });\r\n");
      out.write("            //console.log(allPoints )\r\n");
      out.write("    //        map.panTo(new BMap.Point(116.411053, 39.950507))\r\n");
      out.write("            lushu.start()\r\n");
      out.write("//        allPoints = []\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    $(\"stop\").onclick = function(){\r\n");
      out.write("        lushu.stop();\r\n");
      out.write("    }\r\n");
      out.write("    $(\"pause\").onclick = function(){\r\n");
      out.write("        lushu.pause();\r\n");
      out.write("    }\r\n");
      out.write("    $(\"hide\").onclick = function(){\r\n");
      out.write("        lushu.hideInfoWindow();\r\n");
      out.write("    }\r\n");
      out.write("    $(\"show\").onclick = function(){\r\n");
      out.write("        lushu.showInfoWindow();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

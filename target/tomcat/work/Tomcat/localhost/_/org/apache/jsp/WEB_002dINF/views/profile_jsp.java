/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-04-18 09:22:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fprincipal_0026_005fproperty_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fshiro_005fprincipal_0026_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fshiro_005fprincipal_0026_005fproperty_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <title>AdminLTE 2 | Dashboard</title>\r\n");
      out.write("    <!-- Tell the browser to be responsive to screen width -->\r\n");
      out.write("    <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("    <!-- Font Awesome -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/font-awesome.min.css\">\r\n");
      out.write("    <!-- Ionicons -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/ionicons.min.css\">\r\n");
      out.write("    <!-- Theme style -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/AdminLTE.min.css\">\r\n");
      out.write("    <!-- AdminLTE Skins. Choose a skin from the css/skins\r\n");
      out.write("         folder instead of downloading all of them to reduce the load. -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/skins/all-skins.min.css\">\r\n");
      out.write("    <!--bootstrap上传图片-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/fileinput/css/fileinput.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/css/bootstrapValidator.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"hold-transition skin-blue sidebar-mini\">\r\n");
      out.write("<section class=\"content-header\">\r\n");
      out.write("    <div class=\"box-header\">\r\n");
      out.write("        <h3 class=\"box-title\">个人基本信息</h3>\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<!-- Main content -->\r\n");
      out.write("<section class=\"content\">\r\n");
      out.write("    <form role=\"form\" class=\"form-horizontal\" id=\"upForm\">\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-2 control-label\">姓名</label>\r\n");
      out.write("            <div class=\"col-sm-6\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"name\"  readOnly=\"true\" name=\"name\" value=\"");
      if (_jspx_meth_shiro_005fprincipal_005f0(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-2 control-label\">电话号码</label>\r\n");
      out.write("            <div class=\"col-sm-6\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"tel\" name=\"tel\" placeholder=\"请输入您的电话号码\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-2 control-label\" >请输入身份号码</label>\r\n");
      out.write("            <div class=\"col-sm-6\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"idCard\" name=\"idCard\" placeholder=\"请输入有效证件号码\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label class=\"col-sm-2 control-label\">身份证照片上传</label>\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <input id=\"imgUp\" name=\"imgUp\" type =\"file\" multiple  class=\"file-loading\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </form>\r\n");
      out.write("</section>\r\n");
      out.write("<!-- /.content -->\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery 2.2.3 -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/jQuery/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap 3.3.6 -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/js/bootstrapValidator.js\"></script>\r\n");
      out.write("<!-- Slimscroll -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/slimScroll/jquery.slimscroll.min.js\"></script>\r\n");
      out.write("<!-- FastClick -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/fastclick/fastclick.js\"></script>\r\n");
      out.write("<!-- AdminLTE App -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/dist/js/app.js\"></script>\r\n");
      out.write("<!-- AdminLTE for demo purposes -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/dist/js/demo.js\"></script>\r\n");
      out.write("<!--tabs-->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/dist/js/app_iframe.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/fileinput/js/fileinput.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/fileinput/js/locales/zh.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("    $(function () {\r\n");
      out.write("        //0.初始化fileinput\r\n");
      out.write("        var oFileInput = new FileInput();\r\n");
      out.write("        oFileInput.Init(\"imgUp\", \"");
      out.print(request.getContextPath());
      out.write("pic/upload\");\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("    //初始化fileinput\r\n");
      out.write("    var FileInput = function () {\r\n");
      out.write("        var oFile = new Object();\r\n");
      out.write("        //初始化fileinput控件（第一次初始化）\r\n");
      out.write("        oFile.Init = function(ctrlName, uploadUrl) {\r\n");
      out.write("            var control = $('#' + ctrlName);\r\n");
      out.write("            //初始化上传控件的样式\r\n");
      out.write("            control.fileinput({\r\n");
      out.write("                language: 'zh', //设置语言\r\n");
      out.write("                uploadUrl: uploadUrl, //上传的地址\r\n");
      out.write("                allowedFileExtensions: ['jpg', 'gif', 'png'],//接收的文件后缀\r\n");
      out.write("                showUpload: true, //是否显示上传按钮\r\n");
      out.write("                showCaption: false,//是否显示标题\r\n");
      out.write("                browseClass: \"btn btn-primary\", //按钮样式\r\n");
      out.write("                dropZoneEnabled: false,//是否显示拖拽区域\r\n");
      out.write("//                minImageWidth: 50, //图片的最小宽度\r\n");
      out.write("//                minImageHeight: 50,//图片的最小高度\r\n");
      out.write("//                maxImageWidth: 120,//图片的最大宽度\r\n");
      out.write("//                maxImageHeight: 120,//图片的最大高度\r\n");
      out.write("                maxFileSize: 2048,//单位为kb，如果为0表示不限制文件大小\r\n");
      out.write("                //minFileCount: 0,\r\n");
      out.write("                maxFileCount: 3, //表示允许同时上传的最大文件个数\r\n");
      out.write("                enctype: 'multipart/form-data',\r\n");
      out.write("                validateInitialCount:true,\r\n");
      out.write("                previewFileIcon: \"<i class='glyphicon glyphicon-king'></i>\",\t\r\n");
      out.write("                msgFilesTooMany: \"选择上传的文件数量({n}) 超过允许的最大数值{m}！\",\r\n");
      out.write("            });\r\n");
      out.write("            //导入文件上传完成之后的事件\r\n");
      out.write("            $(\"#imgUp\").on(\"fileuploaded\", function (event, data, previewId, index) {\r\n");
      out.write("//                $(\"#myChange\").modal(\"hide\");\r\n");
      out.write("                var data = data.response.lstOrderImport;\r\n");
      out.write("                if (data == undefined) {\r\n");
      out.write("                    toastr.error('文件格式类型不正确');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        return oFile;\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_shiro_005fprincipal_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:principal
    org.apache.shiro.web.tags.PrincipalTag _jspx_th_shiro_005fprincipal_005f0 = (org.apache.shiro.web.tags.PrincipalTag) _005fjspx_005ftagPool_005fshiro_005fprincipal_0026_005fproperty_005fnobody.get(org.apache.shiro.web.tags.PrincipalTag.class);
    _jspx_th_shiro_005fprincipal_005f0.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fprincipal_005f0.setParent(null);
    // /WEB-INF/views/profile.jsp(38,102) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fprincipal_005f0.setProperty("name");
    int _jspx_eval_shiro_005fprincipal_005f0 = _jspx_th_shiro_005fprincipal_005f0.doStartTag();
    if (_jspx_th_shiro_005fprincipal_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fprincipal_0026_005fproperty_005fnobody.reuse(_jspx_th_shiro_005fprincipal_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fprincipal_0026_005fproperty_005fnobody.reuse(_jspx_th_shiro_005fprincipal_005f0);
    return false;
  }
}

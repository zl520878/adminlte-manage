/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-04-19 02:39:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.sysLog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class manager_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>侧边栏</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/font-awesome.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/ionicons.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/AdminLTE.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/skins/all-skins.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/plugins/datatables/jquery.dataTables.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/plugins/datatables/dataTables.bootstrap.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/css/bootstrap-treeview.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"overflow: hidden\" class=\"sidebar-mini\">\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<!--表格-->\r\n");
      out.write("    <table id=\"dataTable\" class=\"table table-striped table-bordered table-hover table-condensed\" align=\"center\">\r\n");
      out.write("        <thead>\r\n");
      out.write("        <tr class=\"info\">\r\n");
      out.write("            <th>序号</th>\r\n");
      out.write("            <th>用户</th>\r\n");
      out.write("            <th>角色</th>\r\n");
      out.write("            <th>操作</th>\r\n");
      out.write("            <th>ip</th>\r\n");
      out.write("            <th>创建时间</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody></tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/jQuery/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/datatables/dataTables.bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/datatables/jquery.dataTables.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/slimScroll/jquery.slimscroll.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/fastclick/fastclick.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/dist/js/app.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/dist/js/demo.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/datatables/dataTables.bootstrap.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/datatables/jquery.dataTables.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/js/bootstrap-treeview.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    $(function () {\r\n");
      out.write("//添加、修改异步提交地址\r\n");
      out.write("\t\tvar str = \"\";\r\n");
      out.write("        var tables = $(\"#dataTable\").dataTable({\r\n");
      out.write("            serverSide: true,//分页，取数据等等的都放到服务端去\r\n");
      out.write("            //processing: true,//载入数据的时候是否显示“载入中”\r\n");
      out.write("            pageLength: 10,  //首次加载的数据条数\r\n");
      out.write("            ordering: false, //排序操作在服务端进行，所以可以关了。\r\n");
      out.write("            pagingType: \"full_numbers\",\r\n");
      out.write("            autoWidth: false,\r\n");
      out.write("            stateSave: true,//保持翻页状态，和comTable.fnDraw(false);结合使用\r\n");
      out.write("            searching: false,//禁用datatables搜索\r\n");
      out.write("            ajax: {\r\n");
      out.write("                type: \"post\",\r\n");
      out.write("                url: \"");
      out.print(request.getContextPath());
      out.write("dataGrid\",\r\n");
      out.write("                dataSrc: \"data\",\r\n");
      out.write("                dataType:'json',\r\n");
      out.write("                data:{\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            columns: [//对应上面thead里面的序列\r\n");
      out.write("                {\"data\": \"id\"},\r\n");
      out.write("                {\"data\": \"loginName\"},\r\n");
      out.write("                {\"data\": 'roleName'},\r\n");
      out.write("                {\"data\": 'optContent'},\r\n");
      out.write("                {\"data\": 'clientIp'},\r\n");
      out.write("                {\"data\": 'createTime'},\r\n");
      out.write("            ],\r\n");
      out.write("\r\n");
      out.write("//操作按钮\r\n");
      out.write("            \r\n");
      out.write("            language: {\r\n");
      out.write("                lengthMenu: \"\",\r\n");
      out.write("                processing: \"\",\r\n");
      out.write("                paginate: {\r\n");
      out.write("                    previous: \"<\",\r\n");
      out.write("                    next: \">\",\r\n");
      out.write("                    first: \"<<\",\r\n");
      out.write("                    last: \">>\"\r\n");
      out.write("                },\r\n");
      out.write("                zeroRecords: \"\",\r\n");
      out.write("                info: \"\",\r\n");
      out.write("                infoEmpty: \"\",\r\n");
      out.write("                infoFiltered: \"\",\r\n");
      out.write("                sSearch: \"\",\r\n");
      out.write("            },\r\n");
      out.write("//在每次table被draw完后回调函数\r\n");
      out.write("            fnDrawCallback: function () {\r\n");
      out.write("                var api = this.api();\r\n");
      out.write("//获取到本页开始的条数\r\n");
      out.write("                var startIndex = api.context[0]._iDisplayStart;\r\n");
      out.write("                api.column(1).nodes().each(function (cell, i) {\r\n");
      out.write("                    cell.innerHTML = startIndex + i + 1;\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

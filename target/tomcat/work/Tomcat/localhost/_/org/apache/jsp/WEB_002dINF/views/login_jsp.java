/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-04-19 01:03:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/css/bootstrapValidator.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/dist/css/AdminLTE.min.css\">\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/plugins/jQuery/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/bootstrap/js/bootstrapValidator.js\"></script>\r\n");
      out.write("    <script language=\"javascript\">    \r\n");
      out.write("      if (top != window)    \r\n");
      out.write("      top.location.href = window.location.href;    \r\n");
      out.write("  \t</script>   \r\n");
      out.write("    <title>登录</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"hold-transition login-page\">\r\n");
      out.write("<div class=\"login-box\">\r\n");
      out.write("    <div class=\"login-logo\">\r\n");
      out.write("        AdminLTE\r\n");
      out.write("    </div><!-- /.login-logo -->\r\n");
      out.write("    <div class=\"login-box-body\">\r\n");
      out.write("        <p class=\"login-box-msg\">AdminLTE</p>\r\n");
      out.write("        <form id=\"form_login\" action=\"\" method=\"post\">\r\n");
      out.write("            <div class=\"form-group has-feedback\">\r\n");
      out.write("                <input name=\"jg_login_user\" type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"您的用户名\">\r\n");
      out.write("                <span class=\"glyphicon glyphicon-user form-control-feedback\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group has-feedback\">\r\n");
      out.write("                <input name=\"jg_login_pwd\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"密码\">\r\n");
      out.write("                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-xs-6\">\r\n");
      out.write("                        <input name=\"jg_login_verify\" type=\"text\" class=\"form-control\" id=\"validCode\" placeholder=\"请输入验证码\"/>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-xs-6 text-right\">\r\n");
      out.write("                        <img id=\"img_verify\" style=\"max-width:100%;\" src=\"");
      out.print(request.getContextPath());
      out.write("captcha-image\"/>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-xs-8\">\r\n");
      out.write("                    <div class=\"col-xs-8\">\r\n");
      out.write("                        <div class=\"checkbox pull-right\">\r\n");
      out.write("                            <a href=\"#\">忘记密码</a>\r\n");
      out.write("                            <span>&nbsp;/&nbsp;</span>\r\n");
      out.write("                            <a href=\"#\" class=\"text-center\">注册</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div><!-- /.col -->\r\n");
      out.write("                <div class=\"col-xs-4\">\r\n");
      out.write("                    <button id=\"btn_login\" type=\"submit\" class=\"btn btn-primary btn-block btn-flat\">登录\r\n");
      out.write("                    </button>\r\n");
      out.write("                </div><!-- /.col -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div><!-- /.login-box-body -->\r\n");
      out.write("</div><!-- /.login-box -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("        //登录表单验证\r\n");
      out.write("        $('#form_login').bootstrapValidator({\r\n");
      out.write("            message: '提交数据不能全为空',\r\n");
      out.write("            feedbackIcons: {\r\n");
      out.write("                valid: 'glyphicon glyphicon-ok',\r\n");
      out.write("                invalid: 'glyphicon glyphicon-remove',\r\n");
      out.write("                validating: 'glyphicon glyphicon-refresh'\r\n");
      out.write("            },\r\n");
      out.write("            fields: {\r\n");
      out.write("                /*验证*/\r\n");
      out.write("                jg_login_user: {\r\n");
      out.write("                    /*键名username和input name值对应*/\r\n");
      out.write("                    message: '用户验证失败',\r\n");
      out.write("                    validators: {\r\n");
      out.write("                        notEmpty: {\r\n");
      out.write("                            /*非空提示*/\r\n");
      out.write("                            message: '用户名不能为空'\r\n");
      out.write("                        },\r\n");
      out.write("                        regexp: {\r\n");
      out.write("                            /* 只需加此键值对，包含正则表达式，和提示 */\r\n");
      out.write("                            regexp: /[a-zA-Z0-9_]{2,16}/ ,\r\n");
      out.write("                            message: '请正确输入您的用户名'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                jg_login_pwd: {\r\n");
      out.write("                    message: '密码无效',\r\n");
      out.write("                    validators: {\r\n");
      out.write("                        notEmpty: {\r\n");
      out.write("                            message: '密码不能为空'\r\n");
      out.write("                        },\r\n");
      out.write("                        stringLength: {\r\n");
      out.write("                            min: 1,\r\n");
      out.write("                            max: 6,\r\n");
      out.write("                            message: '密码长度必须在6到30之间'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            } //验证内容\r\n");
      out.write("        }).on('success.form.bv', function (e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            var $form = $(e.target);\r\n");
      out.write("            var bv = $form.data('bootstrapValidator');\r\n");
      out.write("            //这里提交表单\r\n");
      out.write("            $.post('");
      out.print(request.getContextPath());
      out.write("login', {\r\n");
      out.write("            \t\tloginName: $(\"#userName\").val(),\r\n");
      out.write("            \t\tpassWord: $(\"#password\").val(),\r\n");
      out.write("            \t\tvalidCode: $(\"#validCode\").val(),\r\n");
      out.write("            }, function (result) {\r\n");
      out.write("            \tif (result.msg == \"登录成功\") {\r\n");
      out.write("            \t\twindow.location.href='");
      out.print(request.getContextPath());
      out.write("index';\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(result.msg);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        //验证图片点击后重新获取验证码\r\n");
      out.write("        $(\"#img_verify\").on(\"click\", function () {\r\n");
      out.write("            $(this).attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("captcha-image?t=\" + Math.random());\r\n");
      out.write("        });\r\n");
      out.write("    })\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
